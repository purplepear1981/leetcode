class Solution {
    public int rob(int[] nums) {
    
    int len=nums.length;
    if (len==0) return 0;
    if (len==1) return nums[0];
    if(len==2) return(Math.max(nums[0],nums[1]));
        
    int a=helper(nums,0,len-2);
    int b=helper(nums,1,len-1);
    
    return Math.max(a,b);
        
    }
    
    private int helper(int[] nums, int start, int end){
        if(start==end) return nums[start];
        
        if(end-start==1) return Math.max(nums[end],nums[start]);
            
        int[] dp=new int[end-start+1];
        dp[0]=nums[start];
        dp[1]=Math.max(nums[start],nums[start+1]);
        
        for(int i=2;i<(end-start+1);i++){
            dp[i]=Math.max(dp[i-2]+nums[start+i],dp[i-1]);
        }
        
        return dp[dp.length-1];
    }
}
